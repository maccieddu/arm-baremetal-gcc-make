NAME = app
#------------------------------------------------------------------------------
# Directories
#------------------------------------------------------------------------------
SRCDIR = src
OBJDIR = obj
RESDIR = res
BINDIR = bin
#------------------------------------------------------------------------------
# Files
#------------------------------------------------------------------------------
SOURCES  := $(wildcard $(SRCDIR)/*.c)
INCLUDES := $(wildcard $(SRCDIR)/*.h)
OBJECTS  := $(SOURCES:$(SRCDIR)/%.c=$(OBJDIR)/%.o)
#------------------------------------------------------------------------------
# Toolchain
#------------------------------------------------------------------------------
TRIPLE = arm-none-eabi-
CC = $(TRIPLE)gcc
AS = $(TRIPLE)as
LD = $(TRIPLE)ld
SZ = $(TRIPLE)size
OC = $(TRIPLE)objcopy
OD = $(TRIPLE)objdump
NM = $(TRIPLE)nm
#------------------------------------------------------------------------------
# Objcopy flags
#------------------------------------------------------------------------------
OCFLAGS += -g
OCFLAGS += -O
OCFLAGS += srec
#------------------------------------------------------------------------------
# Objdump flags
#------------------------------------------------------------------------------
ODFLAGS += -d
ODFLAGS += -S
#------------------------------------------------------------------------------
# Nm flags
#------------------------------------------------------------------------------
NMFLAGS += -n
#------------------------------------------------------------------------------
# Linker flags
#------------------------------------------------------------------------------
LDFLAGS += -T linkerscript.ld
LDFLAGS += --print-memory-usage
LDFLAGS += -Map $(RESDIR)/$(NAME).map
LDFLAGS += --gc-sections
#------------------------------------------------------------------------------
# Assembler flags
#------------------------------------------------------------------------------
ASFLAGS += -mthumb
ASFLAGS += -march=armv7e-m+fp
ASFLAGS += -mcpu=cortex-m4
ASFLAGS += -mfpu=fpv4-sp-d16
ASFLAGS += -mfloat-abi=hard
#------------------------------------------------------------------------------
# Compiler architecture flags
#------------------------------------------------------------------------------
CCFLAGS_ARCH += -mthumb
CCFLAGS_ARCH += -march=armv7e-m+fp
CCFLAGS_ARCH += -mtune=cortex-m4
CCFLAGS_ARCH += -mfpu=fpv4-sp-d16
CCFLAGS_ARCH += -mfloat-abi=hard
#------------------------------------------------------------------------------
# Compiler debugging flags
#------------------------------------------------------------------------------
CCFLAGS_DBG += -ggdb
#------------------------------------------------------------------------------
# Compiler optimization flags
#------------------------------------------------------------------------------
CCFLAGS_OPT += -Og
CCFLAGS_OPT += -ffunction-sections
CCFLAGS_OPT += -fdata-sections
#------------------------------------------------------------------------------
# Compiler warning flags
#------------------------------------------------------------------------------
CCLFAGS_WARN += -Wall
CCLFAGS_WARN += -Wextra
#------------------------------------------------------------------------------
# Compiler linking flags
#------------------------------------------------------------------------------
CCFLAGS_LINK += -nostartfiles
CCFLAGS_LINK += -nodefaultlibs
CCFLAGS_LINK += -nolibc
CCFLAGS_LINK += -nostdlib
#------------------------------------------------------------------------------
# Compiler directories flags
#------------------------------------------------------------------------------
CCFLAGS_DIR += -nostdinc
#------------------------------------------------------------------------------
# Compiler dialect flags
#------------------------------------------------------------------------------
CCFLAGS_DIAL += -std=c11
#------------------------------------------------------------------------------
# Compiler flags
#------------------------------------------------------------------------------
CCFLAGS += -ffreestanding
CCFLAGS += $(CCFLAGS_ARCH)
CCFLAGS += $(CCFLAGS_DBG)
CCFLAGS += $(CCFLAGS_OPT)
CCFLAGS += $(CCLFAGS_WARN)
CCFLAGS += $(CCFLAGS_LINK)
CCFLAGS += $(CCFLAGS_DIR)
CCFLAGS += $(CCFLAGS_DIAL)
#------------------------------------------------------------------------------
# Primary app target
#------------------------------------------------------------------------------
$(BINDIR)/$(NAME).elf: $(OBJDIR)/startup.o $(OBJECTS)
	$(LD) $(LDFLAGS) $^ -o $@
	$(OD) $(ODFLAGS) $@ > $(RESDIR)/$(NAME).lst
	$(OC) $(OCFLAGS) $@ $(RESDIR)/$(NAME).srec
	$(NM) $(NMFLAGS) $@ > $(RESDIR)/$(NAME).sym
#------------------------------------------------------------------------------
# Secondary startup target
#------------------------------------------------------------------------------
$(OBJDIR)/startup.o: startup.S
	$(AS) $(ASFLAGS) $< -o $@
#------------------------------------------------------------------------------
# Secondary sources target
#------------------------------------------------------------------------------
$(OBJECTS): $(OBJDIR)/%.o : $(SRCDIR)/%.c $(SRCDIR)/%.h
	$(CC) $(CCFLAGS) -c $< -o $@
#------------------------------------------------------------------------------
# Directories target
#------------------------------------------------------------------------------
directories:
	mkdir -p $(OBJDIR)
	mkdir -p $(RESDIR)
	mkdir -p $(BINDIR)
#------------------------------------------------------------------------------
# Size target
#------------------------------------------------------------------------------
size:
	$(SZ) $(OBJDIR)/*.o $(BINDIR)/$(NAME).elf
#------------------------------------------------------------------------------
# Clean target
#------------------------------------------------------------------------------
clean:
	rm $(BINDIR)/*
	rm $(OBJDIR)/*
	rm $(RESDIR)/*
#------------------------------------------------------------------------------
