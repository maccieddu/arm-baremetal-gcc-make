NAME = app
#------------------------------------------------------------------------------
# Directories
#------------------------------------------------------------------------------
SRCDIR = src
OBJDIR = obj
BINDIR = bin
#------------------------------------------------------------------------------
# Files
#------------------------------------------------------------------------------
SOURCES  := $(wildcard $(SRCDIR)/*.c)
INCLUDES := $(wildcard $(SRCDIR)/*.h)
OBJECTS  := $(SOURCES:$(SRCDIR)/%.c=$(OBJDIR)/%.o)
#------------------------------------------------------------------------------
# Toolchain
#------------------------------------------------------------------------------
CC = arm-none-eabi-gcc
AS = arm-none-eabi-as
LD = arm-none-eabi-ld
SZ = arm-none-eabi-size
OC = arm-none-eabi-objcopy
NM = arm-none-eabi-nm
#------------------------------------------------------------------------------
# Linker flags
#------------------------------------------------------------------------------
LDFLAGS += -T linkerscript.ld
LDFLAGS += --print-memory-usage
LDFLAGS += -Map $(BINDIR)/app.map
LDFLAGS += --gc-sections
#------------------------------------------------------------------------------
# Assembler flags
#------------------------------------------------------------------------------
ASFLAGS += -mthumb
ASFLAGS += -march=armv7e-m+fp
ASFLAGS += -mcpu=cortex-m4
ASFLAGS += -mfpu=fpv4-sp-d16
ASFLAGS += -mfloat-abi=hard
#------------------------------------------------------------------------------
# Compiler architecture flags
#------------------------------------------------------------------------------
CFLAGS_ARCH += -mthumb
CFLAGS_ARCH += -march=armv7e-m+fp
CFLAGS_ARCH += -mtune=cortex-m4
CFLAGS_ARCH += -mfpu=fpv4-sp-d16
CFLAGS_ARCH += -mfloat-abi=hard
#------------------------------------------------------------------------------
# Compiler debugging flags
#------------------------------------------------------------------------------
CFLAGS_DBG += -ggdb
#------------------------------------------------------------------------------
# Compiler optimization flags
#------------------------------------------------------------------------------
CFLAGS_OPT += -Og
CFLAGS_OPT += -ffunction-sections
CFLAGS_OPT += -fdata-sections
#------------------------------------------------------------------------------
# Compiler warning flags
#------------------------------------------------------------------------------
CLFAGS_WARN += -Wall
CLFAGS_WARN += -Wextra
#------------------------------------------------------------------------------
# Compiler linking flags
#------------------------------------------------------------------------------
CFLAGS_LINK += -nostartfiles
CFLAGS_LINK += -nodefaultlibs
CFLAGS_LINK += -nolibc
CFLAGS_LINK += -nostdlib
#------------------------------------------------------------------------------
# Compiler directories flags
#------------------------------------------------------------------------------
CFLAGS_DIR += -nostdinc
#------------------------------------------------------------------------------
# Compiler dialect flags
#------------------------------------------------------------------------------
CFLAGS_DIAL += -std=c11
#------------------------------------------------------------------------------
# Compiler flags
#------------------------------------------------------------------------------
CFLAGS += -ffreestanding
CFLAGS += $(CFLAGS_ARCH)
CFLAGS += $(CFLAGS_DBG)
CFLAGS += $(CFLAGS_OPT)
CFLAGS += $(CLFAGS_WARN)
CFLAGS += $(CFLAGS_LINK)
CFLAGS += $(CFLAGS_DIR)
CFLAGS += $(CFLAGS_DIAL)
#------------------------------------------------------------------------------
# PHONY
#------------------------------------------------------------------------------
.PHONY: directories size symbols clean
#------------------------------------------------------------------------------
# Default target
#------------------------------------------------------------------------------
all: $(NAME)
#------------------------------------------------------------------------------
# Primary app target
#------------------------------------------------------------------------------
$(NAME): $(BINDIR)/$(NAME).elf

$(BINDIR)/$(NAME).elf: $(OBJDIR)/startup.o $(OBJECTS)
	$(LD) $(LDFLAGS) $^ -o $@
	$(OC) -g -O srec $@ $(BINDIR)/$(NAME).srec
#------------------------------------------------------------------------------
# Startup secondary target
#------------------------------------------------------------------------------
$(OBJDIR)/startup.o: startup.S
	$(AS) $(ASFLAGS) $< -o $@
#------------------------------------------------------------------------------
# Sources secondary target
#------------------------------------------------------------------------------
$(OBJECTS): $(OBJDIR)/%.o : $(SRCDIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@
#------------------------------------------------------------------------------
# Directories target
#------------------------------------------------------------------------------
directories:
	mkdir -p $(OBJDIR)
	mkdir -p $(BINDIR)
#------------------------------------------------------------------------------
# Size target
#------------------------------------------------------------------------------
size:
	$(SZ) $(OBJDIR)/*.o $(BINDIR)/$(NAME).elf
#------------------------------------------------------------------------------
# Symbols terget
#------------------------------------------------------------------------------
symbols:
	$(NM) -n $(BINDIR)/$(NAME).elf
#------------------------------------------------------------------------------
# Clean target
#------------------------------------------------------------------------------
clean:
	rm $(OBJDIR)/*.o $(BINDIR)/$(NAME).elf $(BINDIR)/$(NAME).srec $(BINDIR)/*.map
#------------------------------------------------------------------------------
